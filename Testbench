module CHIP_CPU_tb;

    // Inputs
    reg [15:0] inM;
    reg [15:0] instruction;
    reg reset;

    // Outputs
    wire [15:0] outM;
    wire writeM;
    wire [14:0] addressM;
    wire [14:0] pc;

    // Instantiate the Unit Under Test (UUT)
    CHIP_CPU uut (
        .inM(inM),
        .instruction(instruction),
        .reset(reset),
        .outM(outM),
        .writeM(writeM),
        .addressM(addressM),
        .pc(pc)
    );

    // Clock generation (optional, if needed)
    reg clk = 0;
    always #5 clk = ~clk; // Toggle clock every 5 time units

    // Testbench logic
    initial begin
        // Open a file for logging results (optional)
        $dumpfile("CHIP_CPU_tb.vcd"); // Save simulation data to a file
        $dumpvars(0, CHIP_CPU_tb);    // Dump all variables

        // Initialize inputs
        inM = 16'b0;
        instruction = 16'b0;
        reset = 1;

        // Wait for global reset
        #10 reset = 0;

        // Test Case 1: Load a value into the A register
        $display
